version: '3'
services:

  edge-module:
    image: gbizconnect/gbizconnect-node-nginx:v1.0.0
    depends_on:
      - swaggerui
      - swaggereditor
    ports:
#      - 80:80
      - ${NODE_PORT}:443
    command: >
      /bin/sh -c
      "usermod -u ${gBizConnect_UID} nginx
      && groupmod -g ${gBizConnect_GID} nginx
      && nginx -g 'daemon off;'"
    networks:
      - edge-network
    volumes:
      - ${PWD}/edge-module/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${PWD}/edge-module/nginx/conf.d/:/etc/nginx/conf.d/
      - ${PWD}/edge-module/nginx/js/nginx.js:/etc/nginx/js/nginx.js
      - ${PWD}/edge-module/nginx/ssl/server.crt:/etc/nginx/ssl/server.crt
      - ${PWD}/edge-module/nginx/ssl/private.key:/etc/nginx/ssl/private.key
      - ${PWD}/edge-module/nginx/ssl/dh2048.pem:/etc/nginx/ssl/dh2048.pem
      - ${PWD}/edge-module/nginx/html:/usr/share/nginx/html
      - ${PWD}/edge-module/nginx/.htpasswd:/etc/nginx/.htpasswd
      - ${PWD}/edge-module/log:/var/log/nginx/
      - ${PWD}/permanent/config.json:/etc/nginx/resources/config.json

  swaggerui:
    image: swaggerapi/swagger-ui:v3.38.0
#    ports:
#      - 8080:8080
    networks:
      - edge-network
    volumes:
      - ${PWD}/swaggerui/swagger.json:/usr/share/nginx/html/swagger.json
      - ${PWD}/swaggerui/swagger.json.template:/usr/share/nginx/html/swagger.json.template
    command: >
      /bin/sh -c
      "envsubst '
      $$NODE_DOMAIN
      $$NODE_PORT
      '< /usr/share/nginx/html/swagger.json.template
      > /usr/share/nginx/html/swagger.json
      && sh /usr/share/nginx/run.sh;"
    environment: 
      - API_URL=https://${NODE_DOMAIN}/swaggerui/swagger.json
      - NODE_DOMAIN=${NODE_DOMAIN}
      - NODE_PORT=${NODE_PORT}

  swaggereditor:
    image: swaggerapi/swagger-editor:v3.14.8
#    ports:
#      - 8080:8080
    networks:
      - edge-network
    volumes:
      - ${PWD}/swaggereditor/index.html:/usr/share/nginx/html/index.html
      - ${PWD}/swaggereditor/index.html.template:/usr/share/nginx/html/index.html.template
    command: >
      /bin/sh -c
      "envsubst '
      $$NODE_DOMAIN
      $$NODE_PORT
      '< /usr/share/nginx/html/index.html.template
      > /usr/share/nginx/html/index.html
      && sh /usr/share/nginx/docker-run.sh;"
    environment:
      - NODE_DOMAIN=${NODE_DOMAIN}
      - NODE_PORT=${NODE_PORT}

  jsonserver:
    image: clue/json-server:latest
    # ports:
      # - 80:80
    networks:
      - edge-network
    volumes:
      - ${PWD}/jsonserver/db.json:/data/db.json
      - ${PWD}/jsonserver/routes.json:/data/routes.json
    command: -r routes.json

  config-nginx-php:
    image: nginx:1.18.0-alpine
    depends_on:
      - config-php-script
    ports:
      - 8080:8080
    networks:
      - edge-network
    volumes:
      - ${PWD}/config-nginx-php/nginx.conf:/etc/nginx/nginx.conf
      - ${PWD}/config-nginx-php/conf.d/config.conf:/etc/nginx/conf.d/config.conf

  config-php-script:
    image: gbizconnect/gbizconnect-node-php-fpm:v1.0.0
#    ports:
#      - 9000:9000
    command: >
      /bin/sh -c
      "usermod -u ${gBizConnect_UID} www-data
      && groupmod -g ${gBizConnect_GID} www-data
      && php-fpm"
    networks:
      - edge-network
    volumes:
      - ${PWD}/config-php-script/html/setting.php:/var/www/html/setting.php
      - ${PWD}/config-php-script/log/php_error.log:/var/www/html/log/php_error.log
      - ${PWD}/permanent/config.json:/var/www/html/resources/config.json
    working_dir: /var/www/myapp

  td-agent:
    image: gbizconnect/gbizconnect-node-td-agent:v1.0.0
    ports:
      - 24224:24224/tcp
    user: "${gBizConnect_UID}:${gBizConnect_GID}"
    networks:
      - edge-network
    volumes:
      - ./td-agent/edge/td-agent.conf:/etc/td-agent/td-agent.conf
      - ./td-agent/edge/cert:/etc/td-agent/cert
      - ./td-agent/setting:/var/log/setting
      - ./td-agent/tmp:/var/log/td-agent/tmp
      - ./edge-module/log:/var/log/nginx/
      - ./config-php-script/log:/var/www/html/log
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    tty: true
    stdin_open: true
    privileged: true
    tmpfs:
      - /tmp
      - /run
    stop_signal: SIGRTMIN+3

networks:
  edge-network:
